/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PriceOracle } from "../PriceOracle";

export class PriceOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracle> {
    return super.deploy(overrides || {}) as Promise<PriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LogOraclePriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "timestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100467fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61033361004b602090811b61030717901c565b61004f565b9055565b61056f8061005e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806315f9b874146100675780631d74e67814610090578063524f3889146100a55780636e9960c3146100c6578063704b6c02146100db578063c3825f4b146100fb575b600080fd5b61007a6100753660046103b7565b61010e565b60405161008791906104f2565b60405180910390f35b6100a361009e3660046103f2565b61012b565b005b6100b86100b33660046103b7565b6101f2565b6040516100879291906104fb565b6100ce610245565b604051610087919061045a565b6100ee6100e9366004610389565b610275565b604051610087919061046e565b61007a6101093660046103b7565b6102ea565b805160208183018101805160018252928201919093012091525481565b610133610245565b6001600160a01b0316336001600160a01b03161461016c5760405162461bcd60e51b8152600401610163906104bb565b60405180910390fd5b8160008460405161017d919061043e565b908152602001604051809103902081905550806001846040516101a0919061043e565b9081526020016040518091039020819055507f36ca76524b18cb4cdb0b7d9e85dec22d77161dcc59a944fdc46b6c26f65833878383836040516101e593929190610479565b60405180910390a1505050565b60008060008084604051610206919061043e565b90815260200160405180910390205490506000600185604051610229919061043e565b9081526040519081900360200190205491935090915050915091565b60006102707fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610361030b565b905090565b600061027f610245565b6001600160a01b0316336001600160a01b0316146102af5760405162461bcd60e51b8152600401610163906104bb565b6102e27fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036001600160a01b038416610307565b506001919050565b805160208183018101805160008252928201919093012091525481565b9055565b5490565b600082601f83011261031f578081fd5b813567ffffffffffffffff8082111561033457fe5b604051601f8301601f19168101602001828111828210171561035257fe5b60405282815292508284830160200186101561036d57600080fd5b8260208601602083013760006020848301015250505092915050565b60006020828403121561039a578081fd5b81356001600160a01b03811681146103b0578182fd5b9392505050565b6000602082840312156103c8578081fd5b813567ffffffffffffffff8111156103de578182fd5b6103ea8482850161030f565b949350505050565b600080600060608486031215610406578182fd5b833567ffffffffffffffff81111561041c578283fd5b6104288682870161030f565b9660208601359650604090950135949350505050565b60008251610450818460208701610509565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000606082528451806060840152610498816080850160208901610509565b60208301949094525060408101919091526080601f909201601f19160101919050565b6020808252601e908201527f41646d696e61626c653a2063616c6c6572206973206e6f742061646d696e0000604082015260600190565b90815260200190565b918252602082015260400190565b60005b8381101561052457818101518382015260200161050c565b83811115610533576000848401525b5050505056fea2646970667358221220c1894a0bc0d8bbe48aca1ac8adad8d2c3896a5a18e09f7eb488bcdb9e6ad1d8064736f6c63430007050033";
