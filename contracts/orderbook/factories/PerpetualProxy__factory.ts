/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PerpetualProxy } from "../PerpetualProxy";

export class PerpetualProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    logic: string,
    admin: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PerpetualProxy> {
    return super.deploy(
      logic,
      admin,
      data,
      overrides || {}
    ) as Promise<PerpetualProxy>;
  }
  getDeployTransaction(
    logic: string,
    admin: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(logic, admin, data, overrides || {});
  }
  attach(address: string): PerpetualProxy {
    return super.attach(address) as PerpetualProxy;
  }
  connect(signer: Signer): PerpetualProxy__factory {
    return super.connect(signer) as PerpetualProxy__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpetualProxy {
    return new Contract(address, _abi, signerOrProvider) as PerpetualProxy;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c5b38038062000c5b833981016040819052620000349162000329565b8282828281620000448262000085565b8051156200006557620000638282620000fc60201b620002eb1760201c565b505b506200006e9050565b62000079826200012b565b50505050505062000410565b6200009b816200014f60201b620003171760201c565b620000d85760405162461bcd60e51b815260040180806020018281038252603681526020018062000bff6036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b606062000124838360405180606001604052806027815260200162000bd86027913962000159565b9392505050565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b803b15155b919050565b606062000166846200014f565b620001a35760405162461bcd60e51b815260040180806020018281038252602681526020018062000c356026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b60208310620001e35780518252601f199092019160209182019101620001c2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811462000245576040519150601f19603f3d011682016040523d82523d6000602084013e6200024a565b606091505b5090925090506200025d82828662000267565b9695505050505050565b606083156200027857508162000124565b825115620002895782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620002d5578181015183820152602001620002bb565b50505050905090810190601f168015620003035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b80516001600160a01b03811681146200015457600080fd5b6000806000606084860312156200033e578283fd5b620003498462000311565b925060206200035a81860162000311565b60408601519093506001600160401b038082111562000377578384fd5b818701915087601f8301126200038b578384fd5b8151818111156200039857fe5b604051601f8201601f1916810185018381118282101715620003b657fe5b60405281815283820185018a1015620003cd578586fd5b8592505b81831015620003f05783830185015181840186015291840191620003d1565b818311156200040157858583830101525b80955050505050509250925092565b6107b880620004206000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c3578063f851a440146100e35761005d565b3661005d5761005b6100f8565b005b61005b6100f8565b34801561007157600080fd5b5061005b610080366004610619565b610112565b61005b610093366004610633565b61014c565b3480156100a457600080fd5b506100ad6101c9565b6040516100ba91906106b1565b60405180910390f35b3480156100cf57600080fd5b5061005b6100de366004610619565b610206565b3480156100ef57600080fd5b506100ad6102c0565b610100610110565b61011061010b610321565b610346565b565b61011a61036a565b6001600160a01b0316336001600160a01b031614156101415761013c8161038f565b610149565b6101496100f8565b50565b61015461036a565b6001600160a01b0316336001600160a01b031614156101bc576101768361038f565b6101b68383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102eb92505050565b506101c4565b6101c46100f8565b505050565b60006101d361036a565b6001600160a01b0316336001600160a01b031614156101fb576101f4610321565b9050610203565b6102036100f8565b90565b61020e61036a565b6001600160a01b0316336001600160a01b03161415610141576001600160a01b03811661026c5760405162461bcd60e51b815260040180806020018281038252603a8152602001806106c6603a913960400191505060405180910390fd5b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f61029561036a565b604080516001600160a01b03928316815291841660208301528051918290030190a161013c816103cf565b60006102ca61036a565b6001600160a01b0316336001600160a01b031614156101fb576101f461036a565b60606103108383604051806060016040528060278152602001610700602791396103f3565b9392505050565b803b15155b919050565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015610365573d6000f35b3d6000fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035490565b610398816104f6565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355565b60606103fe84610317565b6104395760405162461bcd60e51b815260040180806020018281038252602681526020018061075d6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106104775780518252601f199092019160209182019101610458565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b50915091506104ec82828661055e565b9695505050505050565b6104ff81610317565b61053a5760405162461bcd60e51b81526004018080602001828103825260368152602001806107276036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6060831561056d575081610310565b82511561057d5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105c75781810151838201526020016105af565b50505050905090810190601f1680156105f45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b80356001600160a01b038116811461031c57600080fd5b60006020828403121561062a578081fd5b61031082610602565b600080600060408486031215610647578182fd5b61065084610602565b9250602084013567ffffffffffffffff8082111561066c578384fd5b818601915086601f83011261067f578384fd5b81358181111561068d578485fd5b87602082850101111561069e578485fd5b6020830194508093505050509250925092565b6001600160a01b039190911681526020019056fe5472616e73706172656e745570677261646561626c6550726f78793a206e65772061646d696e20697320746865207a65726f2061646472657373416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a264697066735822122021082662ebca494913aa2e23d787c9bf81269209047d2c25d96f22a8d6af8fb364736f6c63430007050033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65645570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374";
