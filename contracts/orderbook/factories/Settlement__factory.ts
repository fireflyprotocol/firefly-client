/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Settlement } from "../Settlement";

export class Settlement__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Settlement> {
    return super.deploy(overrides || {}) as Promise<Settlement>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Settlement {
    return super.attach(address) as Settlement;
  }
  connect(signer: Signer): Settlement__factory {
    return super.connect(signer) as Settlement__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Settlement {
    return new Contract(address, _abi, signerOrProvider) as Settlement;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPositive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isFundingRatePositive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundingRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "LogAccountSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "index",
        type: "bytes32",
      },
    ],
    name: "LogIndex",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountBalanceAfterSettlement",
    outputs: [
      {
        components: [
          {
            internalType: "uint120",
            name: "debt",
            type: "uint120",
          },
          {
            internalType: "bool",
            name: "debtIsPositive",
            type: "bool",
          },
          {
            internalType: "uint120",
            name: "size",
            type: "uint120",
          },
          {
            internalType: "bool",
            name: "sizeIsPositive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "margin",
            type: "uint256",
          },
        ],
        internalType: "struct Types.PositionBalance",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maintenanceMargin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialMargin",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isPositive",
                type: "bool",
              },
              {
                internalType: "uint128",
                name: "value",
                type: "uint128",
              },
            ],
            internalType: "struct Types.Index",
            name: "index",
            type: "tuple",
          },
        ],
        internalType: "struct Types.Context",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100467fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610333610050602090811b6101cd17901c565b6001600055610054565b9055565b610ed1806100636000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635e17fec3146100465780636e9960c314610070578063704b6c0214610085575b600080fd5b610059610054366004610ba4565b6100a5565b604051610067929190610dd3565b60405180910390f35b61007861011f565b6040516100679190610c1f565b610098610093366004610ba4565b61014f565b6040516100679190610c33565b6100ad610b12565b6100b5610b40565b6100bd610b6d565b60006100c76101d1565b915091506100d3610b40565b6040518060800160405280838152602001600c548152602001600d548152602001848152509050610102610b12565b61010c8288610408565b5093995094975050505050505050915091565b600061014a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036106e9565b905090565b600061015961011f565b6001600160a01b0316336001600160a01b0316146101925760405162461bcd60e51b815260040161018990610d56565b60405180910390fd5b6101c57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036001600160a01b0384166101cd565b506001919050565b9055565b6101d9610b6d565b60006101e3610b6d565b506040805160608101825260085463ffffffff81168252640100000000810460ff16151560208301526501000000000090046001600160801b031681830152600254915163524f388960e01b815290916000916001600160a01b039091169063524f38899061025790601190600401610c3e565b604080518083038186803b15801561026e57600080fd5b505afa158015610282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a69190610bfc565b50905060006102c8836000015163ffffffff16426106ed90919063ffffffff16565b905080156103fe576102d8610b8d565b50604080518082018252848201516001600160801b031681526020808601511515908201526003549151633afb52f560e21b8152909160009182916001600160a01b03169063ebed4bd490610331908790600401610e65565b604080518083038186803b15801561034857600080fd5b505afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190610bcb565b909250905061038f818661074f565b905081156103a8576103a18382610774565b92506103b5565b6103b2838261080d565b92505b60405180606001604052806103c942610894565b63ffffffff1681526020018460200151151581526020016103ed85600001516108be565b6001600160801b0316905295505050505b5090925090509091565b610410610b12565b600080600061041d610b6d565b610425610b8d565b61042d610b6d565b50606088015161043b610b6d565b506001600160a01b0388166000908152600960209081526040918290208251606081018452905463ffffffff81168252640100000000810460ff16151592820192909252650100000000009091046001600160801b0316918101919091526104a1610b12565b506001600160a01b038916600090815260076020908152604091829020825160a08101845281546001600160781b03808216835260ff600160781b83048116151595840195909552600160801b82041694820194909452600160f81b9093049091161515606083015260010154608082015261051b610b8d565b50604080518082018252908401516001600160801b031681526020808501511515908201528351835163ffffffff9182169116106105805760608201516040830151929a5098506001600160781b039091169650600095509193509091506106df9050565b60408201516001600160781b03166105bf5760608201516040830151929a5098506001600160781b039091169650600095509193509091506106df9050565b8260200151156105e95760408301516105e29082906001600160801b031661080d565b9050610605565b60408301516106029082906001600160801b0316610774565b90505b6060820151602082015115159015151480159060009061066e5760408401518351610638916001600160781b031661074f565b905061064484826108e3565b610664610659610652610911565b839061091d565b608086015190610976565b60808501526106cb565b60408401518351610687916001600160781b03166109d0565b90506000610696610652610911565b90506106a28583610a15565b80856080015110156106b55760006106c4565b60808501516106c490826106ed565b6080860152505b929a50985090965060019550919350909150505b9295509295509295565b5490565b600082821115610744576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b600061076d670de0b6b3a7640000610767858561091d565b90610a32565b9392505050565b61077c610b8d565b8260200151156107b95760405180604001604052806107a885600001518561097690919063ffffffff16565b815260016020909101529050610749565b82518211156107e45760405180604001604052806107a88560000151856106ed90919063ffffffff16565b60408051808201909152835181906107fc90856106ed565b815260006020909101529392505050565b610815610b8d565b826020015161085157604051806040016040528061084085600001518561097690919063ffffffff16565b815260006020909101529050610749565b82518210156108725760408051808201909152835181906107a890856106ed565b60405180604001604052806107fc8560000151856106ed90919063ffffffff16565b600064010000000082106108ba5760405162461bcd60e51b815260040161018990610d8d565b5090565b6000600160801b82106108ba5760405162461bcd60e51b815260040161018990610d0f565b6108eb610b8d565b6108f483610a99565b90506109008183610774565b905061090c8382610aca565b505050565b670de0b6b3a764000090565b60008261092c57506000610749565b8282028284828161093957fe5b041461076d5760405162461bcd60e51b8152600401808060200182810382526021815260200180610e7b6021913960400191505060405180910390fd5b60008282018381101561076d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008215806109dd575081155b156109ea57506000610749565b61076d6001610a0f670de0b6b3a764000061076783610a09898961091d565b906106ed565b90610976565b610a1d610b8d565b610a2683610a99565b9050610900818361080d565b6000808211610a88576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610a9157fe5b049392505050565b610aa1610b8d565b506040805180820190915281516001600160781b03168152602080830151151590820152919050565b8051610ad590610aed565b6001600160781b031682526020908101511515910152565b6000600160781b82106108ba5760405162461bcd60e51b815260040161018990610cc8565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060800160405280600081526020016000815260200160008152602001610b68610b6d565b905290565b604080516060810182526000808252602082018190529181019190915290565b604080518082019091526000808252602082015290565b600060208284031215610bb5578081fd5b81356001600160a01b038116811461076d578182fd5b60008060408385031215610bdd578081fd5b82518015158114610bec578182fd5b6020939093015192949293505050565b60008060408385031215610c0e578182fd5b505080516020909101519092909150565b6001600160a01b0391909116815260200190565b901515815260200190565b60006020808301818452828554600180821660008114610c655760018114610c8357610cbb565b60028304607f16855260ff1983166040890152606088019350610cbb565b60028304808652610c938a610e6e565b885b82811015610cb15781548b820160400152908401908801610c95565b8a01604001955050505b5091979650505050505050565b60208082526027908201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316040820152663230206269747360c81b606082015260800190565b60208082526027908201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316040820152663238206269747360c81b606082015260800190565b6020808252601e908201527f41646d696e61626c653a2063616c6c6572206973206e6f742061646d696e0000604082015260600190565b60208082526026908201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360408201526532206269747360d01b606082015260800190565b82516001600160781b0390811682526020808501511515818401526040808601519092168284015260608086015115158185015260809586015195840195909552835160a08401528381015160c08401528382015160e08401529290930151805163ffffffff166101008301529182015115156101208201529101516001600160801b03166101408201526101600190565b90815260200190565b6000908152602090209056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122032f33e10a1c692561b6e1bf6ffd2dc34b01c68e9a5b555126fbe9cde54b2088964736f6c63430007050033";
