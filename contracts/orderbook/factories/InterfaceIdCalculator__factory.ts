/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { InterfaceIdCalculator } from "../InterfaceIdCalculator";

export class InterfaceIdCalculator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InterfaceIdCalculator> {
    return super.deploy(overrides || {}) as Promise<InterfaceIdCalculator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InterfaceIdCalculator {
    return super.attach(address) as InterfaceIdCalculator;
  }
  connect(signer: Signer): InterfaceIdCalculator__factory {
    return super.connect(signer) as InterfaceIdCalculator__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterfaceIdCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InterfaceIdCalculator;
  }
}

const _abi = [
  {
    inputs: [],
    name: "calcPerpetualV1InterfaceId",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50609d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063aaf34f4e14602d575b600080fd5b60336047565b604051603e91906052565b60405180910390f35b637c28133960e11b90565b6001600160e01b03199190911681526020019056fea264697066735822122056de5cee71cc3e4dae2855e3e5ecf1b572c8c08d989e99ca9181029cd6c3801f64736f6c63430007050033";
