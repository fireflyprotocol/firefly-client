/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Liquidation } from "../Liquidation";

export class Liquidation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    perpetualV1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Liquidation> {
    return super.deploy(perpetualV1, overrides || {}) as Promise<Liquidation>;
  }
  getDeployTransaction(
    perpetualV1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(perpetualV1, overrides || {});
  }
  attach(address: string): Liquidation {
    return super.attach(address) as Liquidation;
  }
  connect(signer: Signer): Liquidation__factory {
    return super.connect(signer) as Liquidation__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Liquidation {
    return new Contract(address, _abi, signerOrProvider) as Liquidation;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "perpetualV1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oraclePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LogLiquidated",
    type: "event",
  },
  {
    inputs: [],
    name: "_PERPETUAL_V1_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "trade",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "debtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sizeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "traderFlags",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "flags",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pnl",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "openInterest",
                type: "uint256",
              },
            ],
            internalType: "struct Types.FreedCollateral",
            name: "makerCollat",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "flags",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pnl",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "openInterest",
                type: "uint256",
              },
            ],
            internalType: "struct Types.FreedCollateral",
            name: "takerCollat",
            type: "tuple",
          },
        ],
        internalType: "struct Types.TradeResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";
