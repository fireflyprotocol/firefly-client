/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Orders } from "../Orders";

export class Orders__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    perpetualV1: string,
    chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Orders> {
    return super.deploy(
      perpetualV1,
      chainId,
      overrides || {}
    ) as Promise<Orders>;
  }
  getDeployTransaction(
    perpetualV1: string,
    chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(perpetualV1, chainId, overrides || {});
  }
  attach(address: string): Orders {
    return super.attach(address) as Orders;
  }
  connect(signer: Signer): Orders__factory {
    return super.connect(signer) as Orders__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Orders {
    return new Contract(address, _abi, signerOrProvider) as Orders;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "perpetualV1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "flags",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leverage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OrderTrader.Order",
        name: "order",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "LogOrderCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "flags",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "triggerPrice",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isNegativeFee",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct OrderTrader.Fill",
        name: "fill",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LogOrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "limitTradeFee",
        type: "uint256",
      },
    ],
    name: "LogSetLimitTradeFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "marketTradeFee",
        type: "uint256",
      },
    ],
    name: "LogSetMarketTradeFee",
    type: "event",
  },
  {
    inputs: [],
    name: "_EIP712_DOMAIN_HASH_",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_FILLED_AMOUNT_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_PERPETUAL_V1_",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_STATUS_",
    outputs: [
      {
        internalType: "enum Orders.OrderStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "flags",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "triggerPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limitFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leverage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
        ],
        internalType: "struct OrderTrader.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "orderHashes",
        type: "bytes32[]",
      },
    ],
    name: "getOrdersStatus",
    outputs: [
      {
        components: [
          {
            internalType: "enum Orders.OrderStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "filledAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Orders.OrderQueryOutput[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limitTradeFee",
        type: "uint256",
      },
    ],
    name: "setLimitTradeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "marketTradeFee",
        type: "uint256",
      },
    ],
    name: "setMarketTradeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "taker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "trade",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "debtAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sizeAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isBuy",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "traderFlags",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "flags",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pnl",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "openInterest",
                type: "uint256",
              },
            ],
            internalType: "struct Types.FreedCollateral",
            name: "makerCollat",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "flags",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pnl",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "openInterest",
                type: "uint256",
              },
            ],
            internalType: "struct Types.FreedCollateral",
            name: "takerCollat",
            type: "tuple",
          },
        ],
        internalType: "struct Types.TradeResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b2438038062002b24833981016040819052620000349162000164565b6200006c7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61033362000160602090811b62000a8717901c565b6001600055600380546001600160a01b0319166001600160a01b0384161790556040516200009d906020016200019e565b60408051601f198184030181528282528051602091820120838301835260068452654f726465727360d01b938201939093528151808301835260038152620312e360ec1b9082015290516200013c92917fad0d085df31fef9a3efed1bcbac3034c1b586b11de0b6addb68ad6b61e3ba9eb917fe6bbd6277e1bf288eed5e8d1780f9a50b239e86b153736bceebccf4ea79d90b39186913091016200022d565b60405160208183030381529060405280519060200120600481905550505062000259565b9055565b6000806040838503121562000177578182fd5b82516001600160a01b03811681146200018e578283fd5b6020939093015192949293505050565b6c08a92a06e626488dedac2d2dc5609b1b81526b1cdd1c9a5b99c81b985b594b60a21b600d8201526e1cdd1c9a5b99c81d995c9cda5bdb8b608a1b60198201526f1d5a5b9d0c8d4d8818da185a5b92590b60821b60288201527f6164647265737320766572696679696e67436f6e7472616374000000000000006038820152602960f81b605182015260520190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6128bb80620002696000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639ea07071116100715780639ea070711461015f578063aacc263e1461017f578063bcccd89a1461019f578063c7dc03f9146101b2578063d4bec8eb146101ba578063e9d0d348146101c2576100b4565b806301ffc9a7146100b957806358eef1c2146100e25780635c457f29146100f75780636e9960c314610117578063704b6c021461012c578063970c2ba11461013f575b600080fd5b6100cc6100c7366004611eef565b6101d5565b6040516100d9919061232b565b60405180910390f35b6100f56100f0366004611ed7565b6101ef565b005b61010a610105366004611ed7565b6102c6565b6040516100d99190612336565b61011f6102d8565b6040516100d991906122a7565b6100cc61013a366004611d5b565b610308565b61015261014d366004611d93565b61037d565b6040516100d99190612714565b61017261016d366004611ed7565b610798565b6040516100d99190612425565b61019261018d366004611e4c565b6107ad565b6040516100d991906122d5565b6100f56101ad366004611ed7565b610894565b61010a610952565b61011f610958565b6100f56101d0366004611f17565b610967565b6001600160e01b0319811663218e7abb60e11b145b919050565b6101f76102d8565b6001600160a01b0316336001600160a01b0316146102305760405162461bcd60e51b815260040161022790612555565b60405180910390fd5b60001960005414156102545760405162461bcd60e51b8152600401610227906125ce565b600019600055662386f26fc100008111156102815760405162461bcd60e51b8152600401610227906124b4565b60018190556040517f192429bdf0f294bc6452c96cf185a1f1ce8e151d66da22b4669f9f62332688d1906102b6908390612336565b60405180910390a1506001600055565b60056020526000908152604090205481565b60006103037fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103610a8b565b905090565b60006103126102d8565b6001600160a01b0316336001600160a01b0316146103425760405162461bcd60e51b815260040161022790612555565b6103757fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61036001600160a01b038416610a87565b506001919050565b610385611a9b565b6003546001600160a01b031633146103af5760405162461bcd60e51b815260040161022790612654565b6003546001600160a01b0390811690878116908a161461046357604051634275143160e11b81526001600160a01b038216906384ea2862906103f7908a908d906004016122bb565b60206040518083038186803b15801561040f57600080fd5b505afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190611ebb565b6104635760405162461bcd60e51b815260040161022790612466565b61046b611ae1565b61047785870187611fd1565b9050876001600160a01b0316816020015160c001516001600160a01b0316146104b25760405162461bcd60e51b81526004016102279061258c565b6104c481600001518260600151610a8f565b6104d681602001518260800151610a8f565b6104e881600001518260400151610b87565b6104fa81602001518260400151610b87565b60208101516040015161051e57806040015160200151816020015160400181815250505b60035461053a9082908b908b906001600160a01b03168b610c5b565b6040810151602081015190516000916105539190610c9f565b90506000610571610562610cff565b60408501516020015190610c9f565b905061057b611b28565b835160408501515161058e919084610d0b565b9050610598611b28565b6105af856020015186604001516000015185610d0b565b90506105c660025485610de690919063ffffffff16565b60608301526001546105d9908590610de6565b60608201526040850151602001511561073557856001600160a01b031663dc4f3a0e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190611d77565b6001600160a01b031663c779c55b866040015160200151886001600160a01b031663796da7af6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e591906120b8565b6040518363ffffffff1660e01b815260040161070292919061276e565b600060405180830381600087803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505b6040518060c0016040528061075261074b610cff565b8790610dfe565b8152604080880151516020830152875191019061076e90610e65565b1581526001602082015260408101939093526060909201529450505050505b979650505050505050565b60066020526000908152604090205460ff1681565b6060808267ffffffffffffffff811180156107c757600080fd5b5060405190808252806020026020018201604052801561080157816020015b6107ee611b57565b8152602001906001900390816107e65790505b50905060005b8381101561088a57600085858381811061081d57fe5b604080518082018252602092830294909401356000818152600690935291205490935082915060ff16600181111561085157fe5b8152600083815260056020908152604090912054910152835184908490811061087657fe5b602090810291909101015250600101610807565b5090505b92915050565b61089c6102d8565b6001600160a01b0316336001600160a01b0316146108cc5760405162461bcd60e51b815260040161022790612555565b60001960005414156108f05760405162461bcd60e51b8152600401610227906125ce565b600019600055662386f26fc1000081111561091d5760405162461bcd60e51b815260040161022790612505565b60028190556040517fd693d521ae6169192cb87fe44f9fc45b1ba9306c1b730240621c4761caa3c61a906102b6908390612336565b60045481565b6003546001600160a01b031681565b6003546001600160a01b03166384ea286261098860e0840160c08501611d5b565b336040518363ffffffff1660e01b81526004016109a69291906122bb565b60206040518083038186803b1580156109be57600080fd5b505afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f69190611ebb565b610a125760405162461bcd60e51b815260040161022790612605565b6000610a2b610a2636849003840184611f2f565b610e6e565b60008181526006602052604090819020805460ff191660011790555190915033907f38713a0bc08c78ff2934eca397cdd65cb161af3e3c60ecc09dc873d22c437b3c90610a7b908590859061268b565b60405180910390a25050565b9055565b5490565b6000610a9a83610e6e565b60008181526006602052604090205490915060ff16610b026001826001811115610ac057fe5b14156040518060400160405280601a81526020017f4f726465722077617320616c72656164792063616e63656c65640000000000008152508660c00151610ef8565b6000610b0e8385610f43565b9050610b806001600160a01b03821615801590610b405750816001600160a01b03168660c001516001600160a01b0316145b6040518060400160405280601e81526020017f4f726465722068617320616e20696e76616c6964207369676e617475726500008152508760c00151610ef8565b5050505050565b6000610b9283610e6e565b825160008281526005602052604081205492935091610bb0916110d3565b9050610bfd84602001518211156040518060400160405280601b81526020017f43616e6e6f74206f76657266696c6c206d616b6572206f7264657200000000008152508660c00151610ef8565b600082815260056020526040908190208290558451606086015191517f5bc08b3e77a0c644c99da73e62fc3b9681722cebcbfd08b15a35f67f5395537492610c4d9286929091908890429061233f565b60405180910390a150505050565b8451610c6890858561112d565b610c778560200151848661112d565b610c8b856000015186604001518484611207565b610b80856020015186604001518484611207565b600082610cae5750600061088e565b82820282848281610cbb57fe5b0414610cf85760405162461bcd60e51b81526004018080602001828103825260218152602001806127f76021913960400191505060405180910390fd5b9392505050565b670de0b6b3a764000090565b610d13611b28565b60c0840151610d20611b28565b610d28611b6e565b6000610d3433856113d7565b509150915081604001516001600160781b031660001480610d645750610d5988610e65565b151582606001511515145b15610dca5760a0880151600090610d8590610d7f898b610c9f565b90610dfe565b90506040518060a00160405280600181526020018281526020016000815260200160008152602001610dbf610db8610cff565b8590610dfe565b815250935050610dda565b610dd7338589898c6114e9565b92505b50909695505050505050565b6000610cf8670de0b6b3a7640000610d7f8585610c9f565b6000808211610e54576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610e5d57fe5b049392505050565b51600116151590565b600080604051602001610e80906121a5565b6040516020818303038152906040528051906020012083604051602001610ea8929190612389565b60408051601f19818403018152908290528051602091820120600454909350610eda9261190160f01b92859101612132565b60405160208183030381529060405280519060200120915050919050565b82610f3e5781610f0782611534565b604051602001610f18929190612176565b60408051601f198184030181529082905262461bcd60e51b825261022791600401612433565b505050565b6040810151600090819060f01c60ff166003811115610f5e57fe5b9050600080826003811115610f6f57fe5b1415610f7c57508361106b565b6001826003811115610f8a57fe5b1415610ff5576040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a33320000000081525085604051602001610fd8929190612154565b60405160208183030381529060405280519060200120905061106b565b600282600381111561100357fe5b1461100a57fe5b6040518060400160405280601b81526020017f19457468657265756d205369676e6564204d6573736167653a0a20000000000081525085604051602001611052929190612154565b6040516020818303038152906040528051906020012090505b600181856040015160f81c866000015187602001516040516000815260200160405260405161109d9493929190612407565b6020604051602081039080840390855afa1580156110bf573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b600082820183811015610cf8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b61116c826001600160a01b03168460c001516001600160a01b031614604051806060016040528060268152602001612818602691398560c00151610ef8565b6111bd816001600160a01b03168460e001516001600160a01b0316148061119e575060e08401516001600160a01b0316155b6040518060600160405280602681526020016128606026913984610ef8565b610f3e428461010001511015806111d75750610100840151155b6040518060400160405280601181526020017013dc99195c881a185cc8195e1c1a5c9959607a1b81525084610ef8565b600061121285610e65565b905060008161122c57856040015185602001511015611239565b8560400151856020015111155b90506112778160405180604001604052806015815260200174119a5b1b081c1c9a58d9481a5cc81a5b9d985b1a59605a1b8152508860c00151610ef8565b6060860151156112c95760008261129557838760600151101561129e565b83876060015111155b90506112c78160405180606001604052806022815260200161283e602291398960c00151610ef8565b505b6112d28661160c565b156113cf576112df611b6e565b60c0870151604051632915140960e11b81526001600160a01b0387169163522a28129161130f91906004016122a7565b60a06040518083038186803b15801561132757600080fd5b505afa15801561133b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135f9190611f4b565b90506113cd816060015115158415151415801561138d575081604001516001600160781b0316876000015111155b6040518060400160405280601b81526020017f46696c6c20646f6573206e6f742064656372656173652073697a6500000000008152508960c00151610ef8565b505b505050505050565b6113df611b6e565b60008080856113ec611b6e565b604051632915140960e11b81526001600160a01b0383169063522a281290611418908a906004016122a7565b60a06040518083038186803b15801561143057600080fd5b505afa158015611444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114689190611f4b565b60808101516040820151919250906001600160781b0316156114da576114a061148f610cff565b83516001600160781b031690610c9f565b935081606001516114ba576114b58482611615565b6114d7565b81602001516114cd576114b584826110d3565b6114d78185611615565b93505b90989297509550909350505050565b6114f1611b28565b6114f9611b6e565b60008061150689896113d7565b9250925092506115278383838a8a8a60a001516115228c610e65565b611672565b9998505050505050505050565b606080763a20307830303030303030302e2e2e303030303030303060481b604051602001611562919061211b565b60408051601f1981840301815291905290506001600160a01b038316609c601c60045b600c8110156116015761159984841c611959565b8582815181106115a557fe5b60200101906001600160f81b031916908160001a9053506115c784831c611959565b8582600b01815181106115d657fe5b60200101906001600160f81b031916908160001a905350600319928301929190910190600101611585565b509295945050505050565b51600216151590565b60008282111561166c576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b61167a611b28565b604088015184906001600160781b0316156116b5576116b289604001516001600160781b0316610d7f6116ab610cff565b8b90610c9f565b90505b836116e1576116de87610d7f838c604001516001600160781b0316610c9f90919063ffffffff16565b93505b6116f36116ec610cff565b8990610dfe565b975088604001516001600160781b031660001415801561171b57508215158960600151151514155b1561190e57611728611b57565b50604080518082019091526000815260016020820152611746611b57565b5060408051808201825283815260016020820152908b01516001600160781b031688116117ad57604051806040016040528061179c8d604001516001600160781b0316610d7f8c8e610c9f90919063ffffffff16565b815260006020909101529150611824565b60006117d9886117d38e604001516001600160781b03168c61161590919063ffffffff16565b90610c9f565b90506117e58188610dfe565b90506040518060400160405280828c101561180957611804838d611615565b611813565b6118138c84611615565b8152602001828c1015158152509250505b61182c611b57565b611836828961197b565b9050600061187a611845610cff565b610d7f8f604001516001600160781b03168d1115611870578f604001516001600160781b0316611872565b8c5b855190610c9f565b905060008d6060015115158360200151151514159050806118a25761189f8583611a24565b94505b84600001519b50600085602001516118bb5760006118be565b60015b60ff1617816118ce5760006118d1565b60025b60ff16811790506040518060a001604052808281526020018e8152602001848152602001600081526020018f81525097505050505050505061078d565b6040518060a001604052806000815260200160006001600160781b0316815260200160006001600160781b031681526020016000815260200189815250915050979650505050505050565b6000600f8216600a811061196e576057611971565b60305b0160f81b92915050565b611983611b57565b82602001516119bf5760405180604001604052806119ae8560000151856110d390919063ffffffff16565b81526000602090910152905061088e565b82518210156119f15760408051808201909152835181906119e09085611615565b81526001602090910152905061088e565b6040518060400160405280611a1385600001518561161590919063ffffffff16565b815260006020909101529392505050565b611a2c611b57565b826020015115611a585760405180604001604052806119e08560000151856110d390919063ffffffff16565b8251821115611a835760405180604001604052806119e085600001518561161590919063ffffffff16565b6040805180820190915283518190611a139085611615565b6040518060c00160405280600081526020016000815260200160001515815260200160008019168152602001611acf611b28565b8152602001611adc611b28565b905290565b6040518060a00160405280611af4611b9c565b8152602001611b01611b9c565b8152602001611b0e611bfd565b8152602001611b1b611c27565b8152602001611adc611c27565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60405180610120016040528060008019168152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b604080516060810182526000808252602082018190529181019190915290565b80356101ea816127d0565b6000610120808385031215611c65578182fd5b611c6e8161277c565b915050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a0820152611cb360c08301611c47565b60c0820152611cc460e08301611c47565b60e082015261010080830135818301525092915050565b600060608284031215611cec578081fd5b6040516060810181811067ffffffffffffffff82111715611d0957fe5b80604052508091508235815260208301356020820152604083013561ffff60f01b81168114611d3757600080fd5b6040919091015292915050565b80516001600160781b03811681146101ea57600080fd5b600060208284031215611d6c578081fd5b8135610cf8816127d0565b600060208284031215611d88578081fd5b8151610cf8816127d0565b600080600080600080600060c0888a031215611dad578283fd5b8735611db8816127d0565b96506020880135611dc8816127d0565b95506040880135611dd8816127d0565b945060608801359350608088013567ffffffffffffffff80821115611dfb578485fd5b818a0191508a601f830112611e0e578485fd5b813581811115611e1c578586fd5b8b6020828501011115611e2d578586fd5b60208301955080945050505060a0880135905092959891949750929550565b60008060208385031215611e5e578182fd5b823567ffffffffffffffff80821115611e75578384fd5b818501915085601f830112611e88578384fd5b813581811115611e96578485fd5b8660208083028501011115611ea9578485fd5b60209290920196919550909350505050565b600060208284031215611ecc578081fd5b8151610cf8816127e8565b600060208284031215611ee8578081fd5b5035919050565b600060208284031215611f00578081fd5b81356001600160e01b031981168114610cf8578182fd5b60006101208284031215611f29578081fd5b50919050565b60006101208284031215611f41578081fd5b610cf88383611c52565b600060a08284031215611f5c578081fd5b60405160a0810181811067ffffffffffffffff82111715611f7957fe5b604052611f8583611d44565b81526020830151611f95816127e8565b6020820152611fa660408401611d44565b60408201526060830151611fb9816127e8565b60608201526080928301519281019290925250919050565b6000818303610380811215611fe4578182fd5b6040805160a0810167ffffffffffffffff828210818311171561200357fe5b8184526120108888611c52565b8352612020886101208901611c52565b6020840152608061023f1986011215612037578586fd5b83519450608085019150848210818311171561204f57fe5b50825261024085013583526102608501356020840152610280850135838301526102a085013561207e816127e8565b6060840152808201839052612097866102c08701611cdb565b60608201526120aa866103208701611cdb565b608082015295945050505050565b6000602082840312156120c9578081fd5b5051919050565b6001600160a01b03169052565b600281106120e757fe5b9052565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b68ffffffffffffffffff1991909116815260170190565b6001600160f01b03199390931683526002830191909152602282015260420190565b600083516121668184602088016127a0565b9190910191825250602001919050565b600083516121888184602088016127a0565b83519083019061219c8183602088016127a0565b01949350505050565b6509ee4c8cae4560d31b81526d189e5d195ccccc88199b1859dccb60921b60068201526e1d5a5b9d0c8d4d88185b5bdd5b9d0b608a1b6014820152721d5a5b9d0c8d4d881b1a5b5a5d141c9a58d94b606a1b6023820152741d5a5b9d0c8d4d881d1c9a59d9d95c941c9a58d94b605a1b6036820152701d5a5b9d0c8d4d881b1a5b5a5d1199594b607a1b604b820152701d5a5b9d0c8d4d881b195d995c9859d94b607a1b605c8201526d1859191c995cdcc81b585ad95c8b60921b606d8201526d1859191c995cdcc81d185ad95c8b60921b607b820152713ab4b73a191a9b1032bc3834b930ba34b7b760711b6089820152602960f81b609b820152609c0190565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b602080825282518282018190526000919060409081850190868401855b8281101561231e5781516123078582516120dd565b8601518487015292840192908501906001016122f2565b5091979650505050505050565b901515815260200190565b90815260200190565b94855260208086019490945260408086019390935281516060808701919091529382015160808601529181015160a08501529190910151151560c083015260e08201526101000190565b60006101408201905083825282516020830152602083015160408301526040830151606083015260608301516080830152608083015160a083015260a083015160c083015260018060a01b0360c08401511660e083015260e08301516101006123f4818501836120d0565b8085015161012085015250509392505050565b93845260ff9290921660208401526040830152606082015260800190565b6020810161088e82846120dd565b60006020825282518060208401526124528160408501602087016127a0565b601f01601f19169190910160400192915050565b6020808252602e908201527f53656e64657220646f6573206e6f742068617665207065726d697373696f6e7360408201526d103337b9103a3432903a30b5b2b960911b606082015260800190565b60208082526031908201527f4d61726b657420747261646520666565206d757374206265206c657373207468604082015270616e206f7220657175616c20746f20312560781b606082015260800190565b60208082526030908201527f4c696d697420747261646520666565206d757374206265206c6573732074686160408201526f6e206f7220657175616c20746f20312560801b606082015260800190565b6020808252601e908201527f41646d696e61626c653a2063616c6c6572206973206e6f742061646d696e0000604082015260600190565b60208082526022908201527f4f7264657242206d616b6572206973206e6f742074616b6572206f6620747261604082015261646560f01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252602f908201527f43616c6c657220646f6573206e6f742068617665207065726d697373696f6e2060408201526e3a379031b0b731b2b61037b93232b960891b606082015260800190565b6020808252601e908201527f6d73672e73656e646572206d7573742062652050657270657475616c56310000604082015260600190565b600061014082019050833582526020840135602083015260408401356040830152606084013560608301526080840135608083015260a084013560a08301526126d660c08501611c47565b6126e360c08401826120d0565b506126f060e08501611c47565b6126fd60e08401826120d0565b506101009384013593820193909352610120015290565b60006101c082019050825182526020830151602083015260408301511515604083015260608301516060830152608083015161275360808401826120eb565b5060a08301516127676101208401826120eb565b5092915050565b918252602082015260400190565b60405181810167ffffffffffffffff8111828210171561279857fe5b604052919050565b60005b838110156127bb5781810151838201526020016127a3565b838111156127ca576000848401525b50505050565b6001600160a01b03811681146127e557600080fd5b50565b80151581146127e557600080fdfe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f72646572206d616b657220646f6573206e6f74206d61746368207472616465206d616b65725472696767657220707269636520686173206e6f74206265656e20726561636865644f726465722074616b657220646f6573206e6f74206d617463682074726164652074616b6572a26469706673582212200b3811a2dc728129761048aa353668d407642824a53490fdff462c0692c624bf64736f6c63430007050033";
